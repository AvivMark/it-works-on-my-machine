name: Release
on:
  push:
    branches: [ main ]

permissions:
  contents: write
  packages: write

env:
  NODE_VERSION: '20'

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with: 
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v4
        with:
          branches: |
            [
              '+([0-9])?(.{+([0-9]),x}).x',
              'master',
              'main',
              'next',
              'next-major',
              { name: 'beta', prerelease: true },
              { name: 'alpha', prerelease: true }
            ]
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
            @semantic-release/github
            @semantic-release/commit-analyzer
            @semantic-release/release-notes-generator
            @semantic-release/npm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  trigger-docker-build:
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Docker Build
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: docker-build
          client-payload: |
            {
              "version": "${{ needs.release.outputs.new_release_version }}"
            }

  trigger-helm-update:
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Helm Update
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: helm-update
          client-payload: |
            {
              "version": "${{ needs.release.outputs.new_release_version }}"
            }
