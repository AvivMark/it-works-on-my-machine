name: CI Core
on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]
  workflow_call:

permissions:
  contents: read
  pull-requests: read

env:
  COVERAGE_THRESHOLD: '80'
  NODE_VERSION: '20'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
      
      - name: use nodejs environment
        uses: actions/setup-node@v4
        with: 
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm' 
      
      - name: Install dependencies
        run: npm ci
      
      - name: Smoke Tests
        run: |
          npm start & SERVER_PID=$!
          sleep 5
          $GITHUB_WORKSPACE/scripts/smoke-test.sh
          kill $SERVER_PID || true

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with: 
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests with coverage
        run: npm run test:coverage -- --coverageReporters="json-summary" --coverageDirectory=coverage
      
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage
      
      - name: Setup Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      
      - name: Enforce coverage threshold
        env:
          COVERAGE_THRESHOLD: ${{ env.COVERAGE_THRESHOLD }}
        run: python .github/scripts/get_coverage.py

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Run Super-Linter
        uses: github/super-linter@v6
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_JAVASCRIPT_ES: true
          IGNORE_GITIGNORED_FILES: true

  helm-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Setup Helm
        uses: azure/setup-helm@v4
        
      - name: Lint Helm Chart
        run: |
          PROJECT_NAME=$(node -p "require('./package.json').name")
          helm lint "charts/$PROJECT_NAME"
