name: Docker Build & Publish
on:
  workflow_call:
    inputs:
      version:
        description: 'Version to build'
        required: true
        type: string
      publish:
        description: 'Will be Published'
        required: true
        type: boolean

permissions:
  contents: read
  packages: write

env:
  NODE_VERSION: '20'

jobs:
  docker-build-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}},value=${{ inputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ inputs.version }}
            type=semver,pattern={{major}},value=${{ inputs.version }}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Determine image tags
        id: tagger
        run: |
          set -euo pipefail
          PROJECT_NAME=$(node -p "require('./package.json').name")
          PROJECT_NAME_SAFE=$(echo "${PROJECT_NAME}" | tr '[:upper:]' '[:lower:]' | tr ' ' '-')
          REPO_OWNER=$(echo "$GITHUB_REPOSITORY" | cut -d'/' -f1)
          IMAGE_BASE="ghcr.io/${REPO_OWNER,,}/${PROJECT_NAME_SAFE}"
          VERSION="${{ inputs.version }}"

          echo "tags<<EOF" >> $GITHUB_OUTPUT
          echo "${IMAGE_BASE}:${VERSION}" >> $GITHUB_OUTPUT
          echo "${IMAGE_BASE}:${GITHUB_SHA}" >> $GITHUB_OUTPUT
          if [ "${{ github.ref_name }}" == "main" ]; then
            echo "${IMAGE_BASE}:latest" >> $GITHUB_OUTPUT
          else 
            echo "${IMAGE_BASE}:${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.tagger.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ./Dockerfile

      - name: Docker Scout Quickview and CVEs
        uses: docker/scout-action@v1
        with:
          command: quickview,cves
          image: ${{ steps.tagger.outputs.tags }}

      - name: Docker Scout SBOM
        uses: docker/scout-action@v1
        with:
          command: sbom
          image: ${{ steps.tagger.outputs.tags }}
          output: sbom.json

      - name: Docker Scout Recommendations
        uses: docker/scout-action@v1
        with:
          command: recommendations
          image: ${{ steps.tagger.outputs.tags }}

      - name: Upload Docker Scout SARIF Report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: scout.sarif

